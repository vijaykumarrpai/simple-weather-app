{"version":3,"sources":["components/ErrorNotice/ErrorNotice.module.css","elements/Logo/Logo.module.css","components/WeatherDetails/WeatherDetails.module.css","containers/App/App.module.css","components/Footer/Footer.module.css","elements/Button/Button.module.css","components/WeatherDetails/Temperature/Temperature.module.css","assets/Icons/Preview.svg","elements/Card/Card.module.css","components/Header/Header.module.css","components/SearchBar/SearchBar.module.css","elements/InputField/InputField.module.css","elements/Icon/Icon.module.css","components/WeatherDetails/Description/Description.module.css","components/WeatherDetails/Date/Date.module.css","components/Preview/Preview.module.css","assets/Icons sync /^/.*/.svg$","assets/Icons/Clear.svg","assets/Icons/Cloud-wind.svg","assets/Icons/Clouds.svg","assets/Icons/Drizzle.svg","assets/Icons/Fog.svg","assets/Icons/Haze.svg","assets/Icons/Mist.svg","assets/Icons/Moon.svg","assets/Icons/Night-rainy.svg","assets/Icons/Night.svg","assets/Icons/Rain.svg","assets/Icons/Rainy-thunder.svg","assets/Icons/Rainy.svg","assets/Icons/Snow.svg","assets/Icons/Sun.svg","assets/Icons/Sunshine.svg","assets/Icons/Tonado.svg","elements/Card/Card.js","elements/Logo/Logo.js","components/Header/Header.js","components/Footer/Footer.js","elements/InputField/InputField.js","elements/Button/Button.js","components/SearchBar/SearchBar.js","elements/Icon/Icon.js","components/WeatherDetails/Temperature/Temperature.js","components/WeatherDetails/Description/Description.js","components/WeatherDetails/Date/Date.js","components/WeatherDetails/WeatherDetails.js","components/Preview/Preview.js","components/ErrorNotice/ErrorNotice.js","containers/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","card","props","className","classes","Card","children","logo","logoWithColorScheme","Logo","colorScheme","Dark","Light","join","onClick","clicked","header","Header","style","backgroundColor","color","onClickHandler","footer","Footer","Separator","inputField","InputFieldWrapper","htmlFor","name","label","type","placeholder","value","onChange","handleChange","error","assetMapping","colors","required","button","buttonClasses","ButtonWrapper","position","FormButtonWrapper","searchBar","SearchBarWrapper","InputField","onChangeHandler","Button","icon","src","require","alt","Icon","temperature","TemperatureWrapper","Math","round","degrees","TemperatureSymbol","description","DescriptionWrapper","date","today","Date","DateWrapper","dateformat","weatherDetails","WeatherDetailsWrapper","WeatherIconWrapper","data","WeatherDataWrapper","Temperature","Description","preview","Preview","errorNotice","ErrorNoticeWrapper","NotFound404","ErrorTextWrapper","NotFoundHeading","NotFoundDetails","App","state","searchBarInput","loading","searchBarHandler","setState","target","tryAgainHandler","setWeather","city","URL","process","fetch","then","res","json","cod","main","temp","weather","catch","err","console","log","cardContent","this","ErrorNotice","WeatherDetails","AppWrapper","AppMain","SearchBar","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.5d078d7e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ErrorNoticeWrapper\":\"ErrorNotice_ErrorNoticeWrapper__2m6WS\",\"NotFound404\":\"ErrorNotice_NotFound404__2-GOV\",\"NotFoundHeading\":\"ErrorNotice_NotFoundHeading__28q-E\",\"NotFoundDetails\":\"ErrorNotice_NotFoundDetails__2F9r7\",\"ErrorTextWrapper\":\"ErrorNotice_ErrorTextWrapper__1E4T4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__2_n2m\",\"Light\":\"Logo_Light__3MrEY\",\"Dark\":\"Logo_Dark__3ZCfQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WeatherDetailsWrapper\":\"WeatherDetails_WeatherDetailsWrapper__1QSHx\",\"fadein\":\"WeatherDetails_fadein__11nY9\",\"WeatherIconWrapper\":\"WeatherDetails_WeatherIconWrapper__srM7g\",\"WeatherDataWrapper\":\"WeatherDetails_WeatherDataWrapper__q_vdk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppWrapper\":\"App_AppWrapper__3oQX0\",\"AppMain\":\"App_AppMain__3JWb_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Footer\":\"Footer_Footer__1gT3v\",\"Separator\":\"Footer_Separator__Fc4JN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ButtonWrapper\":\"Button_ButtonWrapper__1BYOn\",\"FormButtonWrapper\":\"Button_FormButtonWrapper__3RNIx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TemperatureWrapper\":\"Temperature_TemperatureWrapper__5JaM3\",\"TemperatureSymbol\":\"Temperature_TemperatureSymbol__y5F7H\"};","module.exports = __webpack_public_path__ + \"static/media/Preview.29a0aca0.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Card_Card__2xdTq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__1UihU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchBarWrapper\":\"SearchBar_SearchBarWrapper__1Y6i6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputFieldWrapper\":\"InputField_InputFieldWrapper__2djDc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Icon\":\"Icon_Icon__2GfSP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DescriptionWrapper\":\"Description_DescriptionWrapper__1rwft\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DateWrapper\":\"Date_DateWrapper__6Om5H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Preview\":\"Preview_Preview__1hgy_\"};","var map = {\n\t\"./Clear.svg\": 62,\n\t\"./Cloud-wind.svg\": 63,\n\t\"./Clouds.svg\": 64,\n\t\"./Drizzle.svg\": 65,\n\t\"./Fog.svg\": 66,\n\t\"./Haze.svg\": 67,\n\t\"./Mist.svg\": 68,\n\t\"./Moon.svg\": 69,\n\t\"./Night-rainy.svg\": 70,\n\t\"./Night.svg\": 71,\n\t\"./Preview.svg\": 13,\n\t\"./Rain.svg\": 72,\n\t\"./Rainy-thunder.svg\": 73,\n\t\"./Rainy.svg\": 74,\n\t\"./Snow.svg\": 75,\n\t\"./Sun.svg\": 76,\n\t\"./Sunshine.svg\": 77,\n\t\"./Tonado.svg\": 78\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 61;","module.exports = __webpack_public_path__ + \"static/media/Clear.db9ab18c.svg\";","module.exports = __webpack_public_path__ + \"static/media/Cloud-wind.a82005aa.svg\";","module.exports = __webpack_public_path__ + \"static/media/Clouds.7ee70f9f.svg\";","module.exports = __webpack_public_path__ + \"static/media/Drizzle.425a2644.svg\";","module.exports = __webpack_public_path__ + \"static/media/Fog.9248a8c1.svg\";","module.exports = __webpack_public_path__ + \"static/media/Haze.82d93268.svg\";","module.exports = __webpack_public_path__ + \"static/media/Mist.ffbda6d9.svg\";","module.exports = __webpack_public_path__ + \"static/media/Moon.e3158b56.svg\";","module.exports = __webpack_public_path__ + \"static/media/Night-rainy.06f78ffe.svg\";","module.exports = __webpack_public_path__ + \"static/media/Night.7d9c9233.svg\";","module.exports = __webpack_public_path__ + \"static/media/Rain.708290b4.svg\";","module.exports = __webpack_public_path__ + \"static/media/Rainy-thunder.c623741c.svg\";","module.exports = __webpack_public_path__ + \"static/media/Rainy.b5e8855f.svg\";","module.exports = __webpack_public_path__ + \"static/media/Snow.104ea80a.svg\";","module.exports = __webpack_public_path__ + \"static/media/Sun.f963a166.svg\";","module.exports = __webpack_public_path__ + \"static/media/Sunshine.a98369fb.svg\";","module.exports = __webpack_public_path__ + \"static/media/Tonado.cd8d7fce.svg\";","import React from 'react';\r\n\r\nimport classes from './Card.module.css';\r\n\r\nconst card = (props) => {\r\n    return(\r\n        <div className={classes.Card}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default card;","import React from 'react';\r\n\r\nimport classes from './Logo.module.css';\r\n\r\nconst logo = (props) => {\r\n    let logoWithColorScheme = [\r\n        classes.Logo,\r\n        (props.colorScheme === 'dark') ? classes.Dark : classes.Light\r\n    ];\r\n    return(\r\n        <h1 className={logoWithColorScheme.join(' ')} onClick={props.clicked}>\r\n            Weather App by Vijay\r\n        </h1>\r\n    );\r\n}\r\n\r\nexport default logo;","import React from 'react';\r\n\r\nimport classes from './Header.module.css';\r\nimport Logo from '../../elements/Logo/Logo';\r\n\r\nconst header = (props) => {\r\n    return(\r\n        <header className={classes.Header} style={{backgroundColor: props.color}}>\r\n            <Logo colorScheme={'light'} clicked={props.onClickHandler} />\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default header;","import React from 'react';\r\n\r\nimport classes from './Footer.module.css';\r\nimport Logo from '../../elements/Logo/Logo';\r\n\r\nconst footer = (props) => {\r\n    return(\r\n        <footer className={classes.Footer}>\r\n            <Logo colorScheme='dark' clicked={props.onClickHandler} />\r\n            <div className={classes.Separator}></div>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default footer;","import React from 'react';\r\n\r\nimport classes from './InputField.module.css';\r\nimport assetMapping from '../../assets/assetMapping.json';\r\n\r\nconst inputField = (props) => {\r\n    return (\r\n        <div className={classes.InputFieldWrapper}>\r\n            <label htmlFor={props.name}>{props.label}</label>\r\n            <input \r\n            type={props.type}\r\n            id={props.name}\r\n            name={props.name}\r\n            placeholder={props.placeholder}\r\n            value={props.value}\r\n            onChange={props.handleChange}\r\n            style={(props.error) ? {'borderBottomColor': assetMapping.colors.error} : null}\r\n            required />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default inputField;","import React from 'react';\r\n\r\nimport classes from './Button.module.css';\r\n\r\nconst button = (props) => {\r\n    let buttonClasses = [\r\n        classes.ButtonWrapper,\r\n        (props.position === 'onForm') ? classes.FormButtonWrapper : null\r\n    ];\r\n    return(\r\n        <div className={buttonClasses.join(' ')}>\r\n            <button type={props.type} name={props.name} onClick={props.clicked}>{props.children}</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default button;","import React from 'react';\r\n\r\nimport classes from './SearchBar.module.css';\r\nimport InputField from '../../elements/InputField/InputField';\r\nimport Button from '../../elements/Button/Button';\r\n\r\nconst searchBar = (props) => {\r\n    return(\r\n        <div className={classes.SearchBarWrapper}>\r\n            <InputField \r\n            type=\"text\"\r\n            name=\"city\"\r\n            label=\"Location\"\r\n            placeholder=\"Enter a city\"\r\n            value={props.value}\r\n            handleChange={props.onChangeHandler}\r\n            error={props.error} />\r\n            <Button\r\n            name=\"searchSubmit\"\r\n            type=\"submit\"\r\n            position=\"onForm\"\r\n            clicked={props.onClickHandler}>Go</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default searchBar;","import React from 'react';\r\n\r\nimport classes from './Icon.module.css';\r\nconst icon = (props) => {\r\n    return(\r\n        <img \r\n        src={require(`../../assets/Icons/${props.type}.svg`)}\r\n        alt={props.type}\r\n        className={classes.Icon} />\r\n    );\r\n}\r\n\r\nexport default icon;","import React from 'react';\r\n\r\nimport classes from './Temperature.module.css';\r\n\r\nconst temperature = (props) => {\r\n    return(\r\n        <div className={classes.TemperatureWrapper}>\r\n            {Math.round(props.degrees)}<span className={classes.TemperatureSymbol}>°</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default temperature;","import React from 'react';\r\n\r\nimport classes from './Description.module.css';\r\n\r\nconst description = (props) => {\r\n    return(\r\n        <div className={classes.DescriptionWrapper}>\r\n            {props.type}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default description;","import React from 'react';\r\n\r\nimport dateformat from 'dateformat';\r\n\r\nimport classes from './Date.module.css';\r\n\r\nconst date = (props) => {\r\n    const today = new Date();\r\n    return(\r\n        <div className={classes.DateWrapper}>\r\n            {dateformat(today, \"dddd, mmmm dd\")}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default date;","import React from 'react';\r\n\r\nimport classes from './WeatherDetails.module.css';\r\nimport Icon from '../../elements/Icon/Icon';\r\nimport Temperature from './Temperature/Temperature';\r\nimport Description from './Description/Description';\r\nimport Date from './Date/Date';\r\n\r\nconst weatherDetails = (props) => {\r\n    return(\r\n        <div className={classes.WeatherDetailsWrapper}>\r\n            <div className={classes.WeatherIconWrapper}>\r\n                <Icon type={props.data.description} />\r\n            </div>\r\n            <div className={classes.WeatherDataWrapper}>\r\n                <Temperature degrees={props.data.temperature} />\r\n                <Description type={props.data.description} />\r\n                <Date />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default weatherDetails;","import React from 'react';\r\n\r\nimport classes from './Preview.module.css';\r\n\r\nconst preview = (props) => {\r\n    return(\r\n        <img src={require('../../assets/Icons/Preview.svg')}\r\n        alt=\"Weather App Icon\"\r\n        className={classes.Preview} />\r\n    );\r\n}\r\n\r\nexport default preview;","import React from 'react';\r\n\r\nimport classes from './ErrorNotice.module.css';\r\nimport Button from '../../elements/Button/Button';\r\n\r\nconst errorNotice = (props) => {\r\n    return(\r\n        <div className={classes.ErrorNoticeWrapper}>\r\n            <h1 className={classes.NotFound404}>404</h1>\r\n            <div className={classes.ErrorTextWrapper}>\r\n                <h2 className={classes.NotFoundHeading}>Oops!</h2>\r\n                <p className={classes.NotFoundDetails}>We can't find the city you are looking for.</p>\r\n                <Button\r\n                    name=\"tryAgain\"\r\n                    type=\"button\"\r\n                    position=\"onErrorNotice\"\r\n                    clicked={props.onClickHandler}> Try again\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default errorNotice;","import React, { Component } from 'react';\r\n\r\nimport { MoonLoader } from 'react-spinners';\r\n\r\nimport classes from './App.module.css';\r\nimport assetMapping from '../../assets/assetMapping.json';\r\nimport Card from '../../elements/Card/Card';\r\nimport Header from '../../components/Header/Header';\r\nimport Footer from '../../components/Footer/Footer';\r\nimport SearchBar from '../../components/SearchBar/SearchBar';\r\nimport WeatherDetails from '../../components/WeatherDetails/WeatherDetails';\r\nimport Preview from '../../components/Preview/Preview';\r\nimport ErrorNotice from '../../components/ErrorNotice/ErrorNotice';\r\n\r\nclass App extends Component {\r\n\r\n    state = {\r\n        searchBarInput: '',\r\n        weatherDetails: {\r\n            temperature: null,\r\n            description: ''\r\n        },\r\n        loading: false,\r\n        error: false\r\n    }\r\n\r\n\r\n    searchBarHandler = (e) => {\r\n        this.setState({\r\n            searchBarInput: e.target.value\r\n        })\r\n    }\r\n\r\n    // Reset state after clicking on Logo or Try Again button\r\n    tryAgainHandler = () => {\r\n        this.setState({\r\n            searchBarInput: '',\r\n            weatherDetails: {},\r\n            error: false\r\n        })\r\n    }\r\n\r\n    // Fetch weather information and update state\r\n    setWeather = () => {\r\n        const city = this.state.searchBarInput;\r\n        const API_KEY = process.env.REACT_APP_WEATHER_API_KEY;\r\n        const API_URL = 'https://api.openweathermap.org/data/2.5/weather';\r\n        const URL = API_URL + `?q=${city}&appid=${API_KEY}&units=metric`;\r\n        this.setState({\r\n            weatherDetails: {},\r\n            loading: true,\r\n            error: false\r\n        }, () => {\r\n            // callback function\r\n            fetch(URL)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                // If city exists, update weather details\r\n                if(data.cod === 200) {\r\n                    this.setState({\r\n                        weatherDetails: {\r\n                            temperature: data.main.temp,\r\n                            description: data.weather[0].main\r\n                        },\r\n                        loading: false\r\n                    });\r\n                } else {\r\n                    // If city doesn't exist, throw error\r\n                    throw data.cod;\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                this.setState({\r\n                    loading: false,\r\n                    error: true\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        // render card content\r\n        let cardContent = <Preview />;\r\n        if (this.state.loading) {\r\n            cardContent = <MoonLoader />;\r\n        } else if (this.state.error) {\r\n            cardContent = <ErrorNotice onClickHandler={this.tryAgainHandler} />;\r\n        } else if (this.state.weatherDetails.temperature && this.state.weatherDetails.description !== '') {\r\n            // Display weather information if temperature and description exists\r\n            cardContent = <WeatherDetails data={this.state.weatherDetails} />;\r\n        }\r\n\r\n        return (\r\n            <div className={classes.AppWrapper}>\r\n                <Header \r\n                color={assetMapping.colors[\r\n                    // setting color based on weather conditions\r\n                    (this.state.error) ? \"error\" : this.state.weatherDetails.description\r\n                ]}\r\n                onClickHandler={this.tryAgainHandler} />\r\n                <main className={classes.AppMain}>\r\n                    <SearchBar \r\n                    value={this.state.searchBarInput}\r\n                    onChangeHandler={this.searchBarHandler}\r\n                    onClickHandler={this.setWeather}\r\n                    error={this.state.error} />\r\n                    <Card>\r\n                        {cardContent}\r\n                    </Card>\r\n                </main>\r\n                <Footer onClickHandler={this.tryAgainHandler} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}